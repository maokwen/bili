name: Release

on: workflow_dispatch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - id: vars
        run: echo ::set-output name=tag::$(date '+%Y-%m-%d')-$(git rev-parse --short HEAD)

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Package with Gradle
        run: gradle shadowJar -x test

      - name: ZIP files
        run: |
          cp ./build/libs/bili-helper-*-all.jar bili-helper.jar
          zip bili-helper-${{steps.vars.outputs.tag}}.zip bili-helper.jar
          cp ./src/main/resources/config.json ./
          zip bili-helper-${{steps.vars.outputs.tag}}.zip config.json
          zip bili-helper-${{steps.vars.outputs.tag}}.zip -r docs/
          zip bili-helper-${{steps.vars.outputs.tag}}.zip LICENSE

      # Docker Image 构建环境
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: vergilgao
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Copy docker files
        run: |
          pwd
          cp bili-helper.jar app.jar
          cp ./src/main/resources/config.json config.json
          ls -l

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: ghcr.io/maokwen/bili-helper:latest

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/arm64
          push: true
          tags: ghcr.io/maokwen/bili-helper:latest-arm64

      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{steps.vars.outputs.tag}}
          release_name: bili-helper-${{steps.vars.outputs.tag}}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./bili-helper-${{steps.vars.outputs.tag}}.zip
          asset_name: bili-helper-${{steps.vars.outputs.tag}}.zip
          asset_content_type: application/zip
